version: '3'

services:
  # api:
  #   image: ghcr.io/julienfuix/ugram-pwa/ugram_api_dev:latest
  #   build:
  #     context: ${API_PATH}
  #     target: dev
  #   ports:
  #     - "3030:3030"
  #   environment:
  #     POSTGRES_HOST: "db"
  #     DATABASE_URI: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}"
  #   depends_on:
  #     - db
  #   restart: on-failure
  #   volumes:
  #     - ./api/src:/app/src
  #     - ./api/config:/app/config
  #     - ./api/test:/app/test
  #     - ./api/public:/app/public
  #   networks:
  #     - conection-db
  # db:
  #   image: postgres:latest
  #   ports:
  #     - "${POSTGRES_PORT}:${POSTGRES_PORT}"
  #   expose:
  #     - ${POSTGRES_PORT}
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   networks:
  #     - conection-db
  #   volumes:
  #     - db-data:/var/lib/postgresql/data

  client:
    image: ghcr.io/julienfuix/ugram-pwa/ugram_web_dev:latest
    build:
      context: ${vars.WEB_PATH}
      target: dev
    ports:
      - ${vars.WEB_PORT}:${vars.WEB_PORT}
    restart: on-failure
    volumes:
      - ${vars.WEB_PATH}/data:/app/data
      - ${vars.WEB_PATH}/pages:/app/pages
      - ${vars.WEB_PATH}/public:/app/public
      - ${vars.WEB_PATH}/src:/app/src
      - ${vars.WEB_PATH}/styles:/app/styles
      - ${vars.WEB_PATH}/.env:/app/.env

networks:
  conection-db:

volumes:
  db-data:

name: CI/CD Pipeline - Production

on:
  workflow_run:
    workflows: ["CI/CD Pipeline - Staging"]
    types:
      - completed
  workflow_dispatch:  # Cette section permet le déclenchement manuel
    inputs:
      manual-trigger:
        description: 'Manually trigger the workflow'
        default: 'true'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    if: github.event_name == 'workflow_dispatch'  # Permet l'exécution en cas de déclenchement manuel

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false


  build-docker-image:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write
    if: github.event_name == 'workflow_dispatch'  # Permet l'exécution en cas de déclenchement manuel

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    # Create Build Push Stop
    - name: Login to GitHub
      run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
    # - name: Start containers
    #   run: docker-compose -f "docker-compose.staging.yml" build
    # - name: Pushing all images
    #   run: docker-compose -f "docker-compose.staging.yml" push
    # - name: Stop containers
    #   if: always()
    #   run: docker-compose -f "docker-compose.staging.yml" down
    

  deploy-stagging:
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
    # Deploy to Stagging
    - name: Deploy APP to staging
      run: echo ${{ secrets.APIKEY }}
    - name: Echo value
      run: echo ${{ vars.TEST_VALUE }}

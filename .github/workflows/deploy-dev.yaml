name: CI/CD Pipeline - Dev

on:
  push:
    branches:
      - main

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    environment: developpement
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create .env file
      run: |
        echo "API_PATH=${{ vars.API_PATH }}" >> .env
        echo "WEB_PATH=${{ vars.WEB_PATH }}" >> .env
        echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
        echo "POSTGRES_PORT=${{ vars.POSTGRES_PORT }}" >> .env
        echo "WEB_PORT=${{ vars.WEB_PORT }}" >> .env
    - name: Create .env.production.local file
      run: |
        echo "NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}" >> client/.env.production.local
    - name: Login to GitHub
      run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
    - name: Start containers
      run: docker-compose build --no-cache
    - name: Pushing all images
      run: docker-compose push
    - name: Stop containers
      if: always()
      run: docker-compose down


  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-docker-image
    environment: developpement

    steps:
    - name: Deploy APP to dev
      uses: actions/checkout@v2
    - name: Deploy API to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker stop $(sudo docker ps -aq)
          docker container prune
          docker rmi ghcr.io/julienfuix/ugram-pwa/ugram_web_dev ghcr.io/julienfuix/ugram-pwa/ugram_api_dev
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull ghcr.io/julienfuix/ugram-pwa/ugram_web_dev:latest
          docker pull ghcr.io/julienfuix/ugram-pwa/ugram_api_dev:latest
          docker compose up -d
